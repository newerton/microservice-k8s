apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{ include "app.namespace" . }}
  name: mysql-pvc
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: {{ .Values.database.mysql.storage.size }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ include "app.namespace" . }}
  name: mysql
  labels: 
    {{- include "app.labels" . | nindent 4 }}
spec:
  ports:
    - name: mysql
      port: {{ .Values.database.mysql.port }}
      targetPort: {{ .Values.database.mysql.port }}
      protocol: TCP
  selector:
    {{- include "app.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ include "app.namespace" . }}
  name: mysql
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: mysql
          image: {{ .Values.database.mysql.image }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: DB_PASSWORD
          ports:
            - containerPort: {{ .Values.images.mysql.port }}
              name: mysql
          volumeMounts:
            - name: mysql-pvc
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-pvc
          persistentVolumeClaim:
            claimName: mysql-pvc
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-configmap
